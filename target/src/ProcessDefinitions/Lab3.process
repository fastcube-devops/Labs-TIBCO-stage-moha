<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/schema/weather.xsd" xmlns:pfx7="http://xmlns.example.com/1619013149745" xmlns:pfx8="http://www.tibco.com/schemas/lab3/Schema/Schema1.xsd4" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/adresse.xsd" xmlns:pfx2="http://www.tibco.com/schemas/Lab2/JSON_GEN_Schemas/Schema.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:pfx3="http://www.tibco.com/schemas/Lab2/schema/Schema.xsd" xmlns:pfx4="http://www.tibco.com/schemas/Lab2/schema/Schema1.xsd2" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Ressources/Data Format.sharedparse" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/schemas/Lab2/schema/Schema1.xsd3" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Ressources/Data Format.sharedparse"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Lab2/JSON_GEN_Schemas/Schema.xsd" schemaLocation="/JSON_GEN_Schemas/weather.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Lab2/schema/Schema1.xsd2" schemaLocation="/schema/q.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/lab3/Schema/Schema1.xsd4" schemaLocation="/schema/WeatherApiRest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/adresse.xsd" schemaLocation="/JSON_GEN_Schemas/adresse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/schema/weather.xsd" schemaLocation="/schema/weather.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Lab2/schema/Schema1.xsd3" schemaLocation="/schema/Schema1.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1619013149745" location="/services/users WSDL.wsdl"/>
    <pd:name>ProcessDefinitions/Lab3.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx4:q"/>
    <pd:startX>46</pd:startX>
    <pd:startY>71</pd:startY>
    <pd:returnBindings>
        <ns2:infos>
            <ns2:adress>
                <xsl:value-of select="$Start/pfx4:q"/>
            </ns2:adress>
            <ns2:lat>
                <xsl:value-of select="$Parse-JSON-1/ns:ActivityOutputClass/current/coord/lat"/>
            </ns2:lat>
            <ns2:long>
                <xsl:value-of select="$Parse-JSON-1/ns:ActivityOutputClass/current/coord/lon"/>
            </ns2:long>
            <ns2:weather>
                <xsl:value-of select="$Parse-JSON-1/ns:ActivityOutputClass/current/weather/description"/>
            </ns2:weather>
            <ns2:time>
                <xsl:value-of select="current-date()"/>
            </ns2:time>
        </ns2:infos>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="ns2:infos"/>
    <pd:endX>1260</pd:endX>
    <pd:endY>96</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1618583867561</pd:targetNamespace>
    <pd:activity name="Invoke REST API  Lat &amp; Lon">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>303</pd:x>
        <pd:y>80</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <restURI>https://api-adresse.data.gouv.fr/search/</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="q" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <ns:Parameters>
                    <Query>
                        <q>
                            <xsl:value-of select="$Start/pfx4:q"/>
                        </q>
                    </Query>
                </ns:Parameters>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>490</pd:x>
        <pd:y>73</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx:JSON"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Invoke-REST-API--Lat--Lon/ns:RESTOutput/msg"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>678</pd:x>
        <pd:y>13</pd:y>
        <pd:width>336</pd:width>
        <pd:height>162</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-JSON/ns:ActivityOutputClass/JSON/features</pd:over>
            <pd:iterationElementSlot>current</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Invoke REST API climat</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse-JSON-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Invoke REST API climat</pd:from>
            <pd:to>Parse-JSON-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Invoke REST API climat">
            <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
            <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
            <pd:x>760</pd:x>
            <pd:y>91</pd:y>
            <config>
                <enableProtocolUI>None</enableProtocolUI>
                <restMethodUI>GET</restMethodUI>
                <restResponseType>JSON</restResponseType>
                <authChoiceUI>No Authentication</authChoiceUI>
                <WADLPaths/>
                <WADLBaseURL/>
                <restMethodIDUI/>
                <restURI>https://api.openweathermap.org/data/2.5/weather</restURI>
                <richOutputEnableUI>false</richOutputEnableUI>
                <restInputReferNode>
                    <xsd:element name="Parameters">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Query" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="lon" type="xsd:double"/>
                                            <xsd:element name="lat" type="xsd:double"/>
                                            <xsd:element name="mode" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="appid" type="xsd:string"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="Header" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="Body" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Form" minOccurs="0">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                            <xsd:element name="Text" minOccurs="0">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                            <xsd:element name="Binary" minOccurs="0">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                            <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content" minOccurs="0">
                                                            <xsd:complexType>
                                                                <xsd:choice>
                                                                    <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                    <xsd:element name="text" type="xsd:string"/>
                                                                    <xsd:element name="fileName" type="xsd:string"/>
                                                                </xsd:choice>
                                                            </xsd:complexType>
                                                        </xsd:element>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </restInputReferNode>
                <restOutputReferNode>
                    <xsd:element name="header">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </restOutputReferNode>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <ns:Parameters>
                        <Query>
                            <lon>
                                <xsl:value-of select="$current/features/geometry/coordinates[1]"/>
                            </lon>
                            <lat>
                                <xsl:value-of select="$current/features/geometry/coordinates[2]"/>
                            </lat>
                            <appid>
                                <xsl:value-of select="&quot;dafffa76891b4295ba668787a413562e&quot;"/>
                            </appid>
                        </Query>
                    </ns:Parameters>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse-JSON-1">
            <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
            <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
            <pd:x>895</pd:x>
            <pd:y>85</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <ValidateOutputEnable>false</ValidateOutputEnable>
                <ActivityOutputEditor ref="pfx6:current"/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <jsonString>
                        <xsl:value-of select="$Invoke-REST-API-climat/ns:RESTOutput/msg"/>
                    </jsonString>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Log initial">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>146</pd:x>
        <pd:y>73</pd:y>
        <config>
            <processName>/ProcessDefinitions/Logging.process</processName>
        </config>
        <pd:inputBindings>
            <pfx3:log_info>
                <pfx3:idFonc>
                    <xsl:value-of select="concat(&quot;?!?!?!?&quot;, tib:timestamp())"/>
                </pfx3:idFonc>
                <pfx3:idTech>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                </pfx3:idTech>
                <pfx3:status>
                    <xsl:value-of select="&quot;N/A&quot;"/>
                </pfx3:status>
                <pfx3:logMessage>
                    <xsl:value-of select="&quot;initiale&quot;"/>
                </pfx3:logMessage>
            </pfx3:log_info>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log succes">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1261</pd:x>
        <pd:y>421</pd:y>
        <config>
            <processName>/ProcessDefinitions/Logging.process</processName>
        </config>
        <pd:inputBindings>
            <pfx3:log_info>
                <pfx3:idFonc>
                    <xsl:value-of select="concat(&quot;?!?!?!?!?&quot;, tib:timestamp())"/>
                </pfx3:idFonc>
                <pfx3:idTech>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                </pfx3:idTech>
                <pfx3:status>
                    <xsl:value-of select="&quot;N/A&quot;"/>
                </pfx3:status>
                <pfx3:logMessage>
                    <xsl:value-of select="&quot;succes&quot;"/>
                </pfx3:logMessage>
            </pfx3:log_info>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1377</pd:x>
        <pd:y>102</pd:y>
        <config>
            <processName>/ProcessDefinitions/Logging.process</processName>
        </config>
        <pd:inputBindings>
            <pfx3:log_info>
                <pfx3:idFonc>
                    <xsl:value-of select="concat(&quot;?!?!?!?!&quot;, tib:timestamp())"/>
                </pfx3:idFonc>
                <pfx3:idTech>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                </pfx3:idTech>
                <pfx3:status>
                    <xsl:value-of select="&quot;N/A&quot;"/>
                </pfx3:status>
                <pfx3:logMessage>
                    <xsl:value-of select="&quot;error&quot;"/>
                </pfx3:logMessage>
            </pfx3:log_info>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1379</pd:x>
        <pd:y>275</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetVariable">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>1104</pd:x>
        <pd:y>76</pd:y>
        <config>
            <variableConfig>/ProcessDefinitions/Shared Variable.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings>
            <ns2:list>
                <xsl:copy-of select="$GetVariable/ns2:list/ns2:infos"/>
                <ns2:infos>
                    <ns2:adress>
                        <xsl:value-of select="$Start/pfx4:q"/>
                    </ns2:adress>
                    <ns2:lat>
                        <xsl:value-of select="$Parse-JSON-1/ns:ActivityOutputClass/current/coord/lat"/>
                    </ns2:lat>
                    <ns2:long>
                        <xsl:value-of select="$Parse-JSON-1/ns:ActivityOutputClass/current/coord/lon"/>
                    </ns2:long>
                    <ns2:weather>
                        <xsl:value-of select="$Parse-JSON-1/ns:ActivityOutputClass/current/weather/description"/>
                    </ns2:weather>
                    <ns2:time>
                        <xsl:value-of select="current-date()"/>
                    </ns2:time>
                </ns2:infos>
            </ns2:list>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>150</pd:x>
        <pd:y>416</pd:y>
        <config>
            <variableConfig>/ProcessDefinitions/Shared Variable.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>242</pd:x>
        <pd:y>341</pd:y>
        <pd:width>126</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$GetVariable/ns2:list/ns2:infos</pd:over>
            <pd:iterationElementSlot>current2</pd:iterationElementSlot>
            <pd:indexSlot>j</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>302</pd:x>
            <pd:y>407</pd:y>
            <config>
                <element ref="ns2:infos"/>
            </config>
            <pd:inputBindings>
                <ns2:infos>
                    <ns2:adress>
                        <xsl:value-of select="if ($GetVariable/ns2:list/ns2:infos/ns2:adress=$Start/pfx4:q) then &quot;accepte&quot; else &quot;reject&quot;"/>
                    </ns2:adress>
                    <ns2:lat>
                        <xsl:value-of select="$current2/ns2:infos/ns2:lat"/>
                    </ns2:lat>
                    <ns2:long>
                        <xsl:value-of select="$current2/ns2:infos/ns2:long"/>
                    </ns2:long>
                    <ns2:weather>
                        <xsl:value-of select="$current2/ns2:infos/ns2:weather"/>
                    </ns2:weather>
                    <ns2:time>
                        <xsl:value-of select="if (tib:compare-date($current2/ns2:infos/ns2:time, current-date()) !=-1   ) then &quot;accepte&quot; else &quot;reject&quot;"/>
                    </ns2:time>
                </ns2:infos>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log initial</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke REST API  Lat &amp; Lon</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:xpathDescription>status</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Invoke-REST-API--Lat--Lon/ns:RESTOutput/StatusCode=200</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription>verification</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(empty($Parse-JSON/ns:ActivityOutputClass/JSON/features/geometry))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log succes</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log error</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>SetVariable</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetVariable</pd:from>
        <pd:to>Log succes</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log initial</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>Log succes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>compare($Map-Data/ns2:infos/ns2:adress, $Map-Data/ns2:infos/ns2:time)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>Invoke REST API  Lat &amp; Lon</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>